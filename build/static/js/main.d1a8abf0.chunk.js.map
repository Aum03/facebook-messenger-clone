{"version":3,"sources":["Message.js","firebase.js","messenger-logo.png","App.js","reportWebVitals.js","index.js"],"names":["Message","forwardRef","ref","message","isUser","username","className","Card","CardContent","Typography","variant","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","input","setInput","messages","setMessage","setUsername","useEffect","prompt","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","id","src","messengerlogo","alt","FormControl","Input","placeholder","value","onChange","event","target","IconButton","type","color","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTA4BeA,EAtBAC,sBAAW,WAAoBC,GAAQ,IAA1BC,EAAyB,EAAzBA,QAElBC,EAF2C,EAAjBC,WAERF,EAAQE,SAGhC,OACI,qBAAKH,IAAKA,EAAKI,UAAS,kBAAaF,GAAU,iBAA/C,SAEI,cAACG,EAAA,EAAD,CAAMD,UAAWF,EAAO,oBAAoB,qBAA5C,SACI,cAACI,EAAA,EAAD,UAEI,eAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,UACIP,EAAQE,SADZ,QAC2BF,EAAQA,oB,gBCLjDQ,EAXYC,IAASC,cACvB,CACAC,OAAQ,0CACRC,WAAY,iDACZC,UAAW,iCACXC,cAAe,6CACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGEC,YACNT,IAAf,ECde,MAA0B,2C,yCCmF1BU,MAxEf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA+BF,mBAAS,IAAxC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOlB,EAAP,KAAiBuB,EAAjB,KAiCA,OA5BAC,qBAAU,WAERD,EAAYE,OAAO,6BAGjB,IACJD,qBAAU,WACRlB,EAAGoB,WAAW,YAAYC,QAAQ,YAAa,QAAQC,YAAW,SAAAC,GAChEP,EAAWO,EAASC,KAAKC,KAAI,SAAAC,GAAG,MAC9B,CAAElC,QAASkC,EAAIC,OAAQC,GAAIF,EAAIE,aAIlC,IAgBD,sBAAKjC,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAYkC,IAAKC,EAAeC,IAAI,KACnD,sBAAMpC,UAAU,YAAhB,SACE,eAACqC,EAAA,EAAD,CAAarC,UAAU,OAAvB,UAEE,cAACsC,EAAA,EAAD,CAAOC,YAAY,oBAAoBvC,UAAU,cAAcwC,MAAOtB,EAAOuB,SAAU,SAAAC,GAAK,OAAKvB,EAASuB,EAAMC,OAAOH,UACvH,cAACI,EAAA,EAAD,CAAa5C,UAAU,aAAa6C,KAAK,SAASzC,QAAQ,YAAY0C,MAAM,UAAUC,QApB1E,SAACL,GAEnBA,EAAMM,iBACN3C,EAAGoB,WAAW,YAAYwB,IAAI,CAC5BpD,QAASqB,EACTnB,SAAUA,EACVmD,UAAW5C,EAASS,UAAUoC,WAAWC,oBAI3CjC,EAAS,KAUyGkC,UAAWnC,EAAvH,SACE,cAAC,IAAD,WAcN,cAAC,IAAD,UACGE,EAASU,KAAI,gBAAGjC,EAAH,EAAGA,QAASoC,EAAZ,EAAYA,GAAZ,OAGV,cAAC,EAAD,CAAkBlC,SAAUA,EAAUF,QAASA,GAAjCoC,YC7DXqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d1a8abf0.chunk.js","sourcesContent":["import { Card, CardContent, Typography } from '@material-ui/core';\r\nimport {forwardRef} from \"react\";\r\nimport React from 'react'\r\nimport \"./Message.css\"\r\n\r\n\r\nconst Message =forwardRef(({message,username},ref)=> {\r\n\r\n    const isUser=username===message.username;\r\n\r\n\r\n    return (\r\n        <div ref={ref} className={`message ${isUser && 'message__user'}`}>\r\n\r\n            <Card className={isUser?'message__userCard':'message__guestCard'}>\r\n                <CardContent>\r\n\r\n                    <Typography variant=\"h6\"  >\r\n                       {message.username}  :  {message.message}\r\n                    </Typography>\r\n                </CardContent>\r\n\r\n            </Card>\r\n\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Message\r\n","import firebase from \"firebase\"\r\n\r\nconst firebaseApp=firebase.initializeApp(\r\n    {\r\n    apiKey: \"AIzaSyAUT-7RwjdEtryqoLpQObg63FtmpodNFQI\",\r\n    authDomain: \"facebook-messenger-clone-ece54.firebaseapp.com\",\r\n    projectId: \"facebook-messenger-clone-ece54\",\r\n    storageBucket: \"facebook-messenger-clone-ece54.appspot.com\",\r\n    messagingSenderId: \"642822787123\",\r\n    appId: \"1:642822787123:web:e62c584cea42529c541346\",\r\n    measurementId: \"G-9QHJLR2E27\"\r\n}\r\n)\r\nconst db=firebaseApp.firestore();\r\nexport default firebase;\r\nexport {db};","export default __webpack_public_path__ + \"static/media/messenger-logo.c06783c2.png\";","import './App.css';\nimport Message from \"./Message\";\nimport FlipMove from \"react-flip-move\"\nimport firebase from \"./firebase\"\nimport { useEffect, useState } from \"react\";\nimport messengerlogo from \"./messenger-logo.png\";\nimport { FormControl, Input } from \"@material-ui/core\";\nimport { db } from './firebase';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from \"@material-ui/core\";\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [messages, setMessage] = useState([]);\n  const [username, setUsername] = useState('');\n\n\n\n\n  useEffect(() => {\n\n    setUsername(prompt('please enter your name'))\n\n  }\n    , [])\n  useEffect(() => {\n    db.collection('messages').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      setMessage(snapshot.docs.map(doc => (\n        { message: doc.data(), id: doc.id })\n      ))\n    })\n\n  }, [])\n\n  const sendMessage = (event) => {\n\n    event.preventDefault();\n    db.collection('messages').add({\n      message: input,\n      username: username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n\n    })\n    // setMessage([...messages, { username: username, message: input }]);\n    setInput('');\n\n  }\n  return (\n    <div className=\"app\">\n      <img className=\"app__logo\" src={messengerlogo} alt=\"\" />\n      <form className=\"app__form\">\n        <FormControl className=\"form\">\n\n          <Input placeholder=\"enter the message\" className=\"form__input\" value={input} onChange={event => (setInput(event.target.value))} />\n          <IconButton  className=\"iconButton\" type=\"submit\" variant=\"contained\" color=\"primary\" onClick={sendMessage} disabled={!input}>\n            <SendIcon />\n          </IconButton>\n\n\n        </FormControl>\n\n\n       \n        {/* <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={sendMessage} disabled={!input}>\n          send message\n        </Button> */}\n\n      </form>\n\n      <FlipMove>\n        {messages.map(({ message, id }) =>\n          (\n\n            <Message key={id} username={username} message={message} />\n\n          )\n        )\n        }\n      </FlipMove>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}